@using ProjectBank.Core
<a href="#" class="list-group-item list-group-item-action py-3 lh-tight @_extraCSS" aria-current="true">
    <div class="d-flex w-100 align-items-center justify-content-between">
        <strong class="mb-1">@Recipient</strong>
        <small>@_lastMessageDataString</small>
    </div>
    <div class="col-10 mb-1 small">@_relatedPostsString.</div>
</a>

@code {

    [Parameter]
    public string Recipient { get; set; }

    [Parameter]
    public DateTime LastMessageDate { get; set; }

    private string _lastMessageDataString { get; set; }

    [Parameter]
    public IEnumerable<PostDetailsDto> RelatedPosts { get; set; }

    private string _relatedPostsString { get; set; }
    
    [Parameter]
    public bool Read { get; set; }
    private string _extraCSS { get; set; }
    
    protected override void OnInitialized()
    {
        //Calculate time
        var currentDate = DateTime.Now;
        var diff = currentDate - LastMessageDate;
        if (diff >= TimeSpan.FromDays(365.2425))
        {
            var years = (int) Math.Floor(diff.Days / 365.2425);
            _lastMessageDataString = $"{years} {(years > 1 ? "years" : "year")} ago";
        }
        else if (diff >= TimeSpan.FromDays(30.436875))
        {
            var months = (int) Math.Floor(diff.Days / 30.436875);
            _lastMessageDataString = $"{months} {(months > 1 ? "months" : "month")} ago";
        }
        else if (diff >= TimeSpan.FromDays(1))
        {
            var days = diff.Days;
            _lastMessageDataString = $"{days} {(days > 1 ? "days" : "day")} ago";
        }
        else if (diff >= TimeSpan.FromHours(1))
        {
            var hours = diff.Hours;
            _lastMessageDataString = $"{hours} {(hours > 1 ? "hours" : "hour")} ago";
        }
        else if (diff >= TimeSpan.FromMinutes(1))
        {
            var minutes = diff.Minutes;
            _lastMessageDataString = $"{minutes} {(minutes > 1 ? "minutes" : "minute")} ago";
        }
        else
        {
            _lastMessageDataString = "Now";
        }
        //Convert related posts to string
        _relatedPostsString = string.Join(", ", RelatedPosts.Select(p => p.Title));

        _extraCSS = Read ? "" : "unread";
        
    }

}